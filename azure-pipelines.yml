# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
---
trigger:
  branches:
    include:
      - main
variables:
  imageName: node-docker-sample
  tag: $(Build.BuildId)
stages:
  - stage: BuildAndPush
    displayName: Build and Push to ACR
    jobs:
      - job: Build
        displayName: Build and Push Docker Image
        pool:
          vmImage: ubuntu-latest
        steps:
          - checkout: self
          - task: Docker@2
            displayName: 'Login to Docker Hub'
            inputs:
            command: login
            containerRegistry: 'DockerHubServiceConnection'
          - task: Docker@2
            displayName: Build Docker image
            inputs:
              containerRegistry: ACR-SVC
              repository: $(imageName)
              command: build
              Dockerfile: Dockerfile
              buildContext: $(Build.SourcesDirectory)
              tags: |
                $(tag)
                latest
          - task: Docker@2
            displayName: Push image to ACR
            inputs:
              containerRegistry: ACR-SVC
              repository: $(imageName)
              command: push
              tags: |
                $(tag)
                latest
  - stage: Deploy
    displayName: Deploy to AKS
    jobs:
    - deployment: DeployApp
      displayName: Deploy to AKS Cluster
      environment: aks-dev
      strategy:
        runOnce:
          deploy:
            steps:
              - checkout: self  # Add this line
              
              - script: |
                  echo "Current working directory:"
                  pwd
                  echo "Listing contents:"
                  ls -la $(System.DefaultWorkingDirectory)
                  echo "Build sources directory:"
                  ls -la $(Build.SourcesDirectory)
                displayName: "Debug: Show working directory contents"


              - task: Kubernetes@1
                displayName: Apply deployment to AKS
                inputs:
                  connectionType: 'Azure Resource Manager'
                  azureSubscriptionEndpoint: 'My-Azure-RM-Connection'
                  azureResourceGroup: 'rg-aks-demo'
                  kubernetesCluster: 'aks-demo'
                  namespace: 'default'
                  command: 'apply'
                  useConfigurationFile: true
                  configuration: '$(Build.SourcesDirectory)/deployment.yaml'
                  secretType: 'None'